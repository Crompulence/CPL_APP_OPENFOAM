/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2106                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default         Euler;
}

gradSchemes
{
    default         Gauss linear;
}

divSchemes
{
  //    default             none;

  div(rhoPhi,U)       Gauss upwind;
  //div(phi,omega)      Gauss upwind;
  //div(phi,epsilon)    Gauss upwind;
  //div(phi,k)          Gauss upwind;
  div(rhoCpPhi,T)       Gauss upwind;
  //div(rhoPhi,K)       Gauss upwind;
  div(phi,alpha)      Gauss vanLeer;
  div(phirb,alpha)    Gauss linear;
  div(((rho*nuEff)*dev2(T(grad(U))))) Gauss linear;
  //div((muEff*dev(T(grad(U)))))  Gauss linear;

  div(((nu*2)*dev(symm(grad(U))))) Gauss linear;

  //div((interpolate(cp)*rhoPhi),T) Gauss upwind;

  //From benchmarks for interFoamHardtPhaseChange 
  //div(rhoPhi,U)                Gauss vanLeerV;
  //div(rhoPhiCp,T)              Gauss linear;
  //div(phi,alpha)               Gauss vanLeer;
  //div(phirb,alpha)             Gauss linear;
  //div(((rho*nuEff)*dev2(T(grad(U))))) Gauss linear;
  div(phi,p_rgh)               Gauss linear;
}

laplacianSchemes
{
    //default         Gauss linear orthogonal;
	default         Gauss linear corrected;
}

interpolationSchemes
{
    default         linear;
}

snGradSchemes
{
    default         corrected;
}

//wallDist
//{
//  method          meshWave;
//}

fluxRequired
{
    default         none;
    p_rgh;
    pcorr;
    alpha.liquid;
}


// ************************************************************************* //
